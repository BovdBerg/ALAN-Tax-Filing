users
	anonymous

interfaces

root {
	'Management': group {
		'Discount periods': collection ['Period'] {
			'Period': text
			'Percentage' : number 'percent'
			'Minimal spendings': number 'eurocent'
		}
		'VAT percentage': number 'percent'
		'Beverages types': collection ['Beverage type'] {
			'Beverage type': text
		}
		'Tables': collection ['Table number'] {
			'Table number': text
			'Seatings': number 'chairs'
			'Orders': reference-set -> downstream ^ ^ .'Service'.'Orders'* .'Order type'?'In-house' = inverse >'Table'
			'Number of orders': number 'units' = count <'Orders'*
			'Total order value': number 'eurocent' = downstream sum <'Orders'* ^ .'Total'
		}
	}

	'Service': group {
		'Menu': collection ['Item name'] {
			'Item name': text
			'Selling price': number 'eurocent'
			'Item type': stategroup (
				'Dish' {
					'Dish type': stategroup (
						'Appetizer' { }
						'Main course' { }
						'Dessert' { }
					)
				}
				'Beverage' {
					'Beverage type': text -> ^ ^ ^ .'Management' .'Beverages types'[]
				}
			)
		}

		'Orders': collection ['Order'] {
			'Order': text @default: auto-increment
			'Order type': stategroup (
				'Takeaway' { }
				'In-house' {
					'Table': text -> ^ ^ ^ .'Management' .'Tables'[] -< 'Orders'
				}
			)
			'Order lines': collection ['Order line'] {
				'Order line': text @default: auto-increment
				'Item': text -> ^ ^ .'Menu'[]
				'Amount': number 'units'
				'Line total': number 'eurocent' = product (
					.'Amount' as 'units',
					>'Item'.'Selling price'
				)
				'Line status': stategroup (
					'On hold' { }
					'Placed' { }
					'Service' { }
					'Served' { }
				)
			}
			'Order status': stategroup (
				'Open' { }
				'Closed' { }
			)

			'Subtotal': number 'eurocent' = sum .'Order lines'* .'Line total'

			'Discount applicable': stategroup (
				'Yes' {
					'Discount period': text -> ^ ^ ^ .'Management' .'Discount periods'[]
					'Discount': number 'eurocent' = switch ^ .'Subtotal' compare ( >'Discount period' .'Minimal spendings' ) (
						| < => 0
						| >= => product (
							from 'percent' >'Discount period' .'Percentage' as 'fraction',
							^ .'Subtotal'
						)
					)
				}
				'No' { }
			)

			'Total': number 'eurocent' = switch .'Discount applicable' (
				|'Yes' as $'discount' => sum ( $'discount' ^ .'Subtotal' , - $'discount' .'Discount' )
				|'No' => .'Subtotal'
			)

			'VAT': number 'eurocent' = product (
				from 'percent' ^ ^ .'Management' .'VAT percentage' as 'fraction' ,
				.'Total'
			)
		}

		'Place new order': command {
			'Provide an order number': text
			'Where is the meal consumed?': stategroup (
				'Outside of restaurant' { }
				'At the restaurant' {
					'Where is the customer seated?': text -> ^ .'Management' .'Tables'[]
				}
			)
			'Order lines': collection ['Provide an order line number'] {
				'Provide an order line number': text
				'Item to be consumed': text -> .'Menu'[]
				'Amount of this item': number 'units'
			}
			'Apply discount?': stategroup (
				'Yes' {
					'Discount period': text -> ^ .'Management' .'Discount periods'[]
				}
				'No' { }
			)
		} => update .'Orders' = create (
			'Order' = @ .'Provide an order number'
			'Order type' = switch @ .'Where is the meal consumed?' (
				|'Outside of restaurant' => create 'Takeaway' ( )
				|'At the restaurant' as $ => create 'In-house' (
					'Table' = $ .'Where is the customer seated?'
				)
			)
			'Order lines' = walk @ .'Order lines' as $ (
				create (
					'Order line' = $ .'Provide an order line number'
					'Item' = $ .'Item to be consumed'
					'Amount' = $ .'Amount of this item'
					'Line status' = create 'Placed' ( )
				)
			)
			'Order status' = create 'Open' ( )
			'Discount applicable' = switch @ .'Apply discount?' (
				|'Yes' as $ => create 'Yes' (
					'Discount period' = $ .'Discount period'
				)
				|'No' => create 'No' ( )
			)
		)
	}
}

numerical-types
	'eurocent'
		= 'units' * 'eurocent'
		= 'fraction' * 'eurocent'
		@numerical-type: (
			label: "Euro"
			decimals: 2
		)
	'chairs'
	'units'
	'percent'
	'fraction'
		= 'percent' / 1 * 10 ^ 2
